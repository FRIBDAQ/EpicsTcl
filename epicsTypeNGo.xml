
<refentry>
    <refmeta>
        <refentrytitle>typeNGo bound to epics</refentrytitle>
        <manvolnum>1tcl</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>epicsTypeNGo</refname>
        <refpurpose>
            Provide epics bindings to a typeNGo widget.
        </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <cmdsynopsis>
            <command>
 package require epicsTypeNGo
            </command>
        </cmdsynopsis>
        <cmdsynopsis>
            <command>
controlwidget::epicsTypeNGo <replaceable>path ?options?...</replaceable>
            </command>
        </cmdsynopsis>
    </refsynopsisdiv>

    <refsect1>
        <title>SUMMARY</title>
        <para>
            Links an epics channel to a <command>typeNGo</command> widget.
            Committing the value results in setting the value of the control channel,
            while the label continuously displays the up-to-date value of the channel.
            Validation serves to prevent a commit on nonsense values.
        </para>
    </refsect1>
    <refsect1>
        <title>OPTIONS</title>
        <para>
            All typeNGo options except
            <command>-command</command> are supported by this, however the use of the
            <command>-textvariable</command> option will break the binding of the label
            to the epics channel.  There may or may not be good reasons to do this.
            The <command>-channel</command> option is added and selects which channel
            the widget will be bound to.
        </para>
    </refsect1>
    <refsect1>
        <title>METHODS</title>
        <para>
            All typeNGo methods are supported.
        </para>
    </refsect1>
    <refsect1>
        <title>EXAMPLES</title>
        <para>
            This example shows how to create a horizontally laid out epics type and go
            widget, that only allows floating point channel values to be entered.
            See the typeNGo widget's <command>-validate</command>, <command>-orient</command>
            switches to understand this example.
        </para>
        <programlisting>
package require epicsTypeNGo

controlwidget::epicsTypNGo .tng -channel Z001F-C -orient horizontal \
    -validate [list string is double -strict %V%]

pack .tng

        </programlisting>
        <para>
        </para>
    </refsect1>
    <refsect1>
        <title>SEE ALSO</title>
        <para>
typeNGo(1tcl)
        </para>
    </refsect1>
</refentry>

